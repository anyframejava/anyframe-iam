<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:tx="http://www.springframework.org/schema/tx"
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
            <props>
<!--hibernate dialect here -->
<!--hibernate dialect-START-->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.default_schema">${hibernate.default_schema}</prop>
<!--hibernate dialect-END-->
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.use_sql_comments">false</prop>
<!-- jdbc.batch_size will direct hibernate to use jdbc2 API for batch updates -->
<!-- One of the more advanced features of JDBC 2.0 is the ability to submit multiple update statements to the database for processing as a single unit -->
                <prop key="hibernate.jdbc.batch_size">5</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
            </props>
        </property>
        <property name="annotatedClasses">
            <list>
<!-- Add new Entities here -->
                <value>anyframe.iam.admin.domain.Users</value>
                <value>anyframe.iam.admin.domain.SecuredResourcesRoles</value>
                <value>anyframe.iam.admin.domain.SecuredResources</value>
                <value>anyframe.iam.admin.domain.RolesHierarchy</value>
                <value>anyframe.iam.admin.domain.Roles</value>
                <value>anyframe.iam.admin.domain.GroupsUsers</value>
                <value>anyframe.iam.admin.domain.GroupsHierarchy</value>
                <value>anyframe.iam.admin.domain.Groups</value>
                <value>anyframe.iam.admin.domain.ViewResource</value>
                <value>anyframe.iam.admin.domain.ViewHierarchy</value>
                <value>anyframe.iam.admin.domain.ViewResourcesMapping</value>
                <value>anyframe.iam.admin.domain.Authorities</value>
                <value>anyframe.iam.admin.domain.IamResourceResult</value>
                <value>anyframe.iam.admin.domain.CandidateSecuredResources</value>
                <value>anyframe.iam.admin.domain.RestrictedTimes</value>
                <value>anyframe.iam.admin.domain.RestrictedTimesRoles</value>
                <value>anyframe.iam.admin.domain.RestrictedTimesResources</value>
            </list>
        </property>
        <property name="packagesToScan">
            <list>
<!-- Add new Packages to scan here -->
                <value>anyframe.iam.admin/domain</value>
            </list>
        </property>
        <!-- nativeSQL -->
		<property name="mappingLocations">
			<list>
				<value>classpath:hibernate/namedquery/namedquery-hibernate-authorities.xml</value>
				<value>classpath:hibernate/namedquery/namedquery-hibernate-groups.xml</value>
				<value>classpath:hibernate/namedquery/namedquery-hibernate-groupsUsers.xml</value>
				<value>classpath:hibernate/namedquery/namedquery-hibernate-roles.xml</value>
				<value>classpath:hibernate/namedquery/namedquery-hibernate-securedResourcesRoles.xml</value>
				<value>classpath:hibernate/namedquery/namedquery-hibernate-securedResources.xml</value>
				<value>classpath:hibernate/namedquery/namedquery-hibernate-restrictedTimes.xml</value>
				<value>classpath:hibernate/namedquery/namedquery-hibernate-candidateSecuredResources.xml</value>
				<value>classpath:hibernate/namedquery/namedquery-hibernate-viewMapping.xml</value>
				<value>classpath:hibernate/namedquery/namedquery-hibernate-viewHierarchy.xml</value>
			</list>
		</property>
    </bean>
    <bean id="dynamicHibernateService" class="anyframe.core.hibernate.impl.DynamicHibernateService">
        <property name="sessionFactory" ref="sessionFactory" />
        <property name="fileNames">
            <list>
<!-- Add new file name here -->
                <value>classpath:hibernate/dynamic/dynamic-hibernate-users.xml</value>
                <value>classpath:hibernate/dynamic/dynamic-hibernate-viewMapping.xml</value>
                <value>classpath:hibernate/dynamic/dynamic-hibernate-viewResources.xml</value>                
                <value>classpath:hibernate/dynamic/dynamic-hibernate-securedResourcesRoles.xml</value>
                <value>classpath:hibernate/dynamic/dynamic-hibernate-securedResources.xml</value>
                <value>classpath:hibernate/dynamic/dynamic-hibernate-roles.xml</value>
                <value>classpath:hibernate/dynamic/dynamic-hibernate-groupsUsers.xml</value>
                <value>classpath:hibernate/dynamic/dynamic-hibernate-groups.xml</value>
                <value>classpath:hibernate/dynamic/dynamic-hibernate-category.xml</value>
                <value>classpath:hibernate/dynamic/dynamic-hibernate-authorities.xml</value>
                <value>classpath:hibernate/dynamic/dynamic-hibernate-candidateSecuredResources.xml</value>
            	<value>classpath:hibernate/dynamic/dynamic-hibernate-restrictedTimes.xml</value>
            </list>
        </property>
    </bean>
</beans>
