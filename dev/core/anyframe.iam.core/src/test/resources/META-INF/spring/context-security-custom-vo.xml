<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:b="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <b:bean id="securedObjectService" class="anyframe.iam.core.securedobject.impl.SecuredObjectServiceImpl" depends-on="sampleSecuritySchemaInitializer">
        <b:property name="securedObjectDAO" ref="securedObjectDAO" />
    </b:bean>

    <b:bean id="securedObjectDAO" class="anyframe.iam.core.securedobject.impl.SecuredObjectDAO">
        <b:property name="dataSource" ref="dataSource" />
    </b:bean>

    <b:bean id="roleHierarchy" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
        <b:property name="hierarchy" ref="hierarchyStrings" />
    </b:bean>

    <b:bean id="hierarchyStrings" class="anyframe.iam.core.userdetails.hierarchicalroles.HierarchyStringsFactoryBean"
            init-method="init">
        <b:property name="securedObjectService" ref="securedObjectService" />
    </b:bean>

    <b:bean id="userDetailsServiceWrapper" class="org.springframework.security.access.hierarchicalroles.UserDetailsServiceWrapper">
        <b:property name="roleHierarchy" ref="roleHierarchy" />
        <b:property name="userDetailsService" ref="jdbcUserService" />
    </b:bean>

    <b:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <b:property name="allowIfAllAbstainDecisions" value="false" />
        <b:property name="decisionVoters">
            <b:list>
                <b:bean class="org.springframework.security.access.vote.RoleVoter">
                    <b:property name="rolePrefix" value="" />
                </b:bean>
                <b:bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
            </b:list>
        </b:property>
    </b:bean>

    <b:bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
        <b:property name="authenticationManager" ref="authenticationManager" />
        <b:property name="accessDecisionManager" ref="accessDecisionManager" />
        <b:property name="securityMetadataSource" ref="databaseSecurityMetadataSource" />
    </b:bean>

    <b:bean id="databaseSecurityMetadataSource" class="org.springframework.security.web.access.intercept.AnyframeReloadableDefaultFilterInvocationSecurityMetadataSource">
        <b:constructor-arg ref="regexUrlPathMatcher" />
        <b:constructor-arg ref="requestMap" />
        <b:property name="securedObjectService" ref="securedObjectService" />
    </b:bean>

    <b:bean id="regexUrlPathMatcher" class="org.springframework.security.web.util.RegexUrlPathMatcher" />

    <b:bean id="requestMap" class="anyframe.iam.core.intercept.ResourcesMapFactoryBean" init-method="init">
        <b:property name="securedObjectService" ref="securedObjectService" />
        <b:property name="resourceType" value="url" />
    </b:bean>

    <http access-denied-page="/sample/common/accessDenied.jsp" path-type="regex" lowercase-comparisons="false">
        <intercept-url pattern="\A/sample/images/.*\Z" filters="none" />
		<intercept-url pattern="\A/sample/common/.*\Z" filters="none" />
		<intercept-url pattern="\A/sample/css/.*\Z" filters="none" />
		<intercept-url pattern="\A/sample/javascript/.*\Z" filters="none" />
		<intercept-url pattern="\A/sample/layouts/.*\Z" filters="none" />
		<intercept-url pattern="\A/sample/upload_files/.*\Z" filters="none" />

        <custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="filterSecurityInterceptor"/>

        <!-- move to DB - SECURED_RESOURCES, SECURED_RESOURCES_ROLE -->

        <form-login login-page="/sample/system/login.jsp" login-processing-url="/j_spring_security_check"
            authentication-failure-url="/sample/system/login.jsp?login_error=1"
            default-target-url="/index.do?flag=L" />
        <anonymous />

        <!--http-basic / -->
        <!--remember-me / -->
        <logout logout-success-url="/sample/system/login.jsp" />
        <!--  if you wish to use Concurrent Session Control - see also listener configuration of web.xml - HttpSessionEventPublisher 
        <concurrent-session-control max-sessions="1" exception-if-maximum-exceeded="true"/>
        -->
    </http>

	<authentication-manager alias="authenticationManager"> 
		<authentication-provider user-service-ref="userDetailsServiceWrapper">
			<!-- password-encoder hash="md5" / -->
		</authentication-provider>
	</authentication-manager>

    <!--
    <jdbc-user-service id="jdbcUserService" data-source-ref="dataSource"
        users-by-username-query="SELECT USER_ID,PASSWORD,ENABLED FROM USERS WHERE USER_ID = ?"
        authorities-by-username-query="SELECT USER_ID,ROLE_ID FROM AUTHORITIES WHERE USER_ID = ?" />
    -->
    
    <b:bean id="jdbcUserService" class="anyframe.iam.core.userdetails.jdbc.ExtJdbcUserDetailsManager" >
        <!-- USER_ID, PASSWORD, ENABLED 는 항상 1,2,3 번째 순서로 나타나야 함! -->
        <b:property name="usersByUsernameQuery" value="SELECT USER_ID, PASSWORD, ENABLED, USER_NAME, SSN, SL_YN, BIRTH_DAY, AGE, CELL_PHONE, ADDR, EMAIL, EMAIL_YN, IMAGE_FILE, REG_DATE FROM USERS WHERE USER_ID = ?"/>
        <b:property name="authoritiesByUsernameQuery" value="SELECT USER_ID,ROLE_ID FROM AUTHORITIES WHERE USER_ID = ?"/>
        <b:property name="dataSource" ref="dataSource"/>
        <!-- 사용자 정의 CustomUserVO 를 쓰고자 하는 경우 ExtUsersByUsernameMapping 를 확장하여 makeCustomUser() 에 관련 로직을 작성한 MappingSqlQuery 등록 -->
        <b:property name="mapClass" value="anyframe.iam.core.userdetails.jdbc.CustomUsersByUsernameMapping"/>
    </b:bean>

	<!-- <global-method-security> -->
	<!--  see annotation sample : CategoryService.updateCategory -->
	<!-- 
	<global-method-security secured-annotations="enabled" jsr250-annotations="enabled">
		<protect-pointcut expression="execution(* com.sds.emp.user..*Service.update*(..))" access="ROLE_USER"/>
	</global-method-security>
	 -->

	<!-- customizing method security start -->
    <b:bean id="methodMap" class="anyframe.iam.core.intercept.ResourcesMapFactoryBean" init-method="init">
        <b:property name="securedObjectService" ref="securedObjectService" />
        <b:property name="resourceType" value="method" />
    </b:bean>

    <b:bean id="methodSecurityMetadataSources" class="org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource">
        <b:constructor-arg ref="methodMap" />
    </b:bean>

    <b:bean id="_delegatingMethodSecurityMetadataSource" class="org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource">
        <b:property name="methodSecurityMetadataSources">
            <b:list>
                <b:ref bean="methodSecurityMetadataSources" />
                <b:bean class="org.springframework.security.access.annotation.SecuredAnnotationSecurityMetadataSource" />
                <b:bean class="org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource" />
            </b:list>
        </b:property>
    </b:bean>

    <b:bean id="_methodSecurityMetadataSourceAdvisor" class="org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor">
        <b:constructor-arg value="_methodSecurityInterceptor" />
        <b:constructor-arg ref="_delegatingMethodSecurityMetadataSource" />
		<b:constructor-arg value="_delegatingMethodSecurityMetadataSource" />
    </b:bean>

    <b:bean id="_methodSecurityInterceptor" class="org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor">
        <b:property name="validateConfigAttributes" value="false" />
        <b:property name="authenticationManager" ref="authenticationManager" />
        <b:property name="accessDecisionManager" ref="accessDecisionManager" />
        <b:property name="securityMetadataSource" ref="_delegatingMethodSecurityMetadataSource" />
    </b:bean>

    <b:bean id="pointcutMap" class="anyframe.iam.core.intercept.ResourcesMapFactoryBean" init-method="init">
        <b:property name="securedObjectService" ref="securedObjectService" />
        <b:property name="resourceType" value="pointcut" />
    </b:bean>

    <b:bean id="_protectPointcutPostProcessor" class="org.springframework.security.config.method.ProtectPointcutPostProcessor">
        <b:constructor-arg ref="methodSecurityMetadataSources" />
        <b:property name="pointcutMap" ref="pointcutMap" />
    </b:bean>

    <!-- customizing method security end -->

</b:beans>
